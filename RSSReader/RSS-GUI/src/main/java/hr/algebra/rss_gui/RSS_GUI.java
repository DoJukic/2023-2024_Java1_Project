/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hr.algebra.rss_gui;

import dal.IRepository;
import dal.RepositoryFactory;
import hr.algebra.rss_gui.view.BlogpostSelectJPanel;
import hr.algebra.rss_gui.view.DataEditJPanel;
import hr.algebra.rss_gui.view.DataViewJPanel;
import hr.algebra.rss_gui.view.LoginJPanel;
import hr.algebra.rss_gui.view.RegisterJPanel;
import hr.algebra.utilities.swing.MessageUtils;
import hr.algebra.utilities.SynchronousAsynchronousWorker;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import model.repo.blogpost.Blogpost;
import model.repo.blogpost.Category;
import model.repo.user.Login;
import model.repo.user.UserInfo;

/**
 *
 * @author Domi
 */
public class RSS_GUI extends javax.swing.JFrame {
    
    public static final String DATE_FORMAT = "yyyy-mm-dd";
    
    public final SynchronousAsynchronousWorker SyncAsyncWorker = new SynchronousAsynchronousWorker();
    
    LoginJPanel loginPanel = new LoginJPanel(this);
    RegisterJPanel registerPanel = new RegisterJPanel(this);
    private boolean registerVisible = false;
    BlogpostSelectJPanel dataSelectPanel = new BlogpostSelectJPanel(this);
    private boolean dataSelectVisible = false;
    DataViewJPanel dataViewPanel = new DataViewJPanel();
    private boolean dataViewVisible = false;
    DataEditJPanel dataEditPanel = new DataEditJPanel();
    private boolean dataEditVisible = false;

    /**
     * Creates new form RSS_GUI
     */
    public RSS_GUI() {
        initComponents();
        
        rebuildTabs();
    }
    
    public void rebuildTabs(){
        // https://stackoverflow.com/questions/1013479/after-calling-jtabbedpane-removeall-the-jtabbedpane-still-has-x-number-of-tab
        while (jtpMain.getTabCount() > 0)
            jtpMain.remove(0);
        
        jtpMain.addTab("Log In", loginPanel);
        if (registerVisible){
            jtpMain.addTab("Register", registerPanel);
        }
        
        if (dataSelectVisible){
            jtpMain.addTab("Data Select", dataSelectPanel);
            if (dataViewVisible){
                jtpMain.addTab("View Data", dataViewPanel);
                if (dataEditVisible){
                    jtpMain.addTab("Edit Data", dataEditPanel);
                }
            }
        }
    }
    
    public void loginLogInAttempt(Login login){
        SyncAsyncWorker.addTask(() -> {
            IRepository repository = RepositoryFactory.getInstance();
            try {
                Optional<UserInfo> loginResult = repository.tryLogin(login);
                
                if (loginResult.isPresent()){
                    SwingUtilities.invokeLater(() ->{
                        dataSelectVisible = true;
                        
                        // TODO: ADMIN STUFF
                        
                        rebuildTabs();
                    });
                }else{
                    SwingUtilities.invokeLater(() ->{
                        MessageUtils.showErrorMessage("Login Failed", "Wrong alias or password.");
                    });
                }
            } catch (Exception ex) {
                Logger.getLogger(RSS_GUI.class.getName()).log(Level.SEVERE, null, ex);
                
                SwingUtilities.invokeLater(() ->{
                    MessageUtils.showErrorMessage("Login Failed", "Database fault :(");
                });
            }
        });
    }
    
    public void showRegister(){
        registerVisible = true;
        rebuildTabs();
        jtpMain.setSelectedComponent(registerPanel);
    }
    
    public void hideRegister(){
        registerVisible = false;
        rebuildTabs();
    }
    
    public void registerRegisterAttempt(Login login){
        MessageUtils.showInformationMessage("REGISTER ATTEMPT!", login.alias);
        hideRegister();
    }
    
    public void blogpostSelectBlogpostSelectedView(Blogpost blogpost){
        MessageUtils.showInformationMessage("SELECTION!", blogpost.title);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jtpMain = new javax.swing.JTabbedPane();
        jMenuBarMain = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Starsector Blog RSS Parser");
        setMinimumSize(new java.awt.Dimension(600, 400));

        jtpMain.setMinimumSize(new java.awt.Dimension(0, 0));

        jMenu1.setText("File");
        jMenuBarMain.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBarMain.add(jMenu2);

        setJMenuBar(jMenuBarMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpMain, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jtpMain, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RSS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RSS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RSS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RSS_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RSS_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBarMain;
    private javax.swing.JTabbedPane jtpMain;
    // End of variables declaration//GEN-END:variables
}
